(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{M:()=>z});var t={baseUrl:"https://nomoreparties.co/v1/wff-cohort-14",headers:{authorization:"ab022e1a-b80f-4939-8f48-ddab79fbed68","Content-Type":"application/json"}},n=function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))},o=function(e,o,r,c,i,l,u,s){var d=o.querySelector(".places__item").cloneNode(!0),f=d.querySelector(".card__image"),p=d.querySelector(".card__title"),m=d.querySelector(".card__delete-button"),v=d.querySelector(".card__like-button"),y=d.querySelector(".card__like-container");return f.src=e.link,f.alt=e.name,p.textContent=e.name,l?m.addEventListener("click",(function(){var o;r(d),o=e._id,fetch("".concat(t.baseUrl,"/cards/").concat(o),{method:"DELETE",headers:t.headers}).then(n).catch((function(e){console.log(e)}))})):m.style.display="none",f.addEventListener("click",(function(){c(e.name,e.link)})),v.addEventListener("click",(function(){u(v,e._id,y)})),i(y,e.likes.length),s&&a(v),d},r=function(e){e.remove()},c=function(e,o,r){e.classList.contains("card__like-button_is-active")?function(e){return fetch("".concat(t.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:t.headers}).then(n).catch((function(e){console.log(e)}))}(o).then((function(t){a(e),i(r,t.likes.length)})).catch((function(e){console.error(e)})):function(e){return fetch("".concat(t.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:t.headers}).then(n).catch((function(e){console.log(e)}))}(o).then((function(t){a(e),i(r,t.likes.length)})).catch((function(e){console.log(e)}))},a=function(e){e.classList.toggle("card__like-button_is-active")},i=function(e,t){e.textContent=t},l=function(e){e.classList.add("popup_is-opened"),e.classList.add("popup_is-animated");var t=e.querySelector(".popup__close");window.addEventListener("keydown",d),e.addEventListener("click",f),t.addEventListener("click",s)},u=function(e){e.classList.remove("popup_is-opened"),window.removeEventListener("keydown",d),e.removeEventListener("click",f),e.querySelector(".popup__close").removeEventListener("click",s)},s=function(e){var t=document.querySelector(".popup_is-opened");u(t)},d=function(e){if("Escape"===e.key){var t=document.querySelector(".popup_is-opened");u(t)}},f=function(e){e.target===e.currentTarget&&u(e.currentTarget)},p={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button-not-active",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error-active"},m=function(e,t,n){var o=e.querySelector(".".concat(t.id,"-error"));t.classList.add(p.inputErrorClass),o.classList.add(p.errorClass),o.textContent=n},v=function(e,t,n){var o=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(n.inputErrorClass),o.classList.remove(n.errorClass),o.textContent=""},y=function(e){var t=Array.from(e.querySelectorAll(p.inputSelector)),n=e.querySelector(p.submitButtonSelector);t.forEach((function(o){o.addEventListener("input",(function(){!function(e,t){t.validity.patternMismatch?(t.setCustomValidity(t.dataset.errorMessage),m(e,t,t.validationMessage)):(t.setCustomValidity(""),v(e,t,p),0===t.value.length?(t.setCustomValidity("вы пропустили это поле."),m(e,t,t.validationMessage)):(t.setCustomValidity(""),v(e,t,p),t.validity.valid?v(e,t,p):m(e,t,t.validationMessage)))}(e,o),h(t,n,p)}))}))},h=function(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?(t.disabled=!1,t.classList.remove(n.inactiveButtonClass)):(t.disabled=!0,t.classList.add(n.inactiveButtonClass))},_=function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);n.forEach((function(n){v(e,n,t)})),h(n,o,t)};function b(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}var S="",g=document.querySelector(".places__list"),E=document.querySelector(".popup_type_edit"),C=document.querySelector(".profile__edit-button"),k=document.querySelector(".profile__add-button"),q=document.querySelector(".popup_type_new-card"),L=document.querySelector(".profile__title"),A=document.querySelector(".profile__description"),x=document.forms["edit-profile"],w=x.elements.name,T=x.elements.description,O=document.forms["new-place"],U=O.elements["place-name"],j=O.elements.link,P=document.querySelector(".profile__image"),M=document.querySelector(".popup_type_avatar"),B=document.forms["avatar-profile"],D=B.elements.link,N=document.querySelectorAll(".popup__button"),V=document.querySelector("#card-template").content,I=document.querySelector(".popup__image"),J=document.querySelector(".popup__caption"),G=document.querySelector(".popup_type_image"),H=function(e,t){I.src=t,J.textContent=e,I.alt=e,l(G)};!function(e){Array.from(document.querySelectorAll(e.formSelector)).forEach((function(e){y(e)}))}(p),C.addEventListener("click",(function(){_(x,p),l(E),w.value=L.textContent,T.value=A.textContent})),k.addEventListener("click",(function(){U.value="",j.value="",_(O,p),l(q)})),O.addEventListener("submit",(function(e){var a;e.preventDefault(),z(!0),(a={name:U.value,link:j.value},fetch("".concat(t.baseUrl,"/cards"),{method:"POST",headers:t.headers,body:JSON.stringify(a)}).then(n).catch((function(e){console.log(e)})).finally((function(){z(!1)}))).then((function(e){var t=o(e,V,r,H,i,!0,c,!1);g.prepend(t),O.reset(),u(q)}))})),x.addEventListener("submit",(function(e){var o;e.preventDefault(),L.textContent=w.value,A.textContent=T.value,z(!0),o={name:L.textContent,about:A.textContent},fetch("".concat(t.baseUrl,"/users/me"),{method:"PATCH",headers:t.headers,body:JSON.stringify(o)}).then(n).catch((function(e){console.log(e)})).finally((function(){z(!1)})),u(E)})),Promise.all([fetch("".concat(t.baseUrl,"/users/me"),{method:"GET",headers:t.headers}).then(n).catch((function(e){console.log(e)})),fetch("".concat(t.baseUrl,"/cards"),{method:"GET",headers:t.headers}).then(n).catch((function(e){console.log(e)}))]).then((function(e){var t,n,a=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var o,r,c,a,i=[],l=!0,u=!1;try{if(c=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(o=c.call(n)).done)&&(i.push(o.value),i.length!==t);l=!0);}catch(e){u=!0,r=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw r}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return b(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?b(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=a[0],u=a[1];L.textContent=l.name,A.textContent=l.about,S=l.avatar,P.setAttribute("style","background-image: url('".concat(S,"')")),u.forEach((function(e){var t=o(e,V,r,H,i,e.owner._id===l._id,c,e.likes.some((function(e){return e._id===l._id})));g.append(t)}))})),P.addEventListener("click",(function(){D.value="",_(B,p),l(M)})),B.addEventListener("submit",(function(e){var o;e.preventDefault(),P.setAttribute("style","background-image: url('".concat(D.value,"')")),z(!0),o=D.value,fetch("".concat(t.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:t.headers,body:JSON.stringify({avatar:o})}).then(n).catch((function(e){console.log(e)})).finally((function(){z(!1)})),B.reset(),u(M)}));var z=function(e){e?N.forEach((function(e){e.textContent="Сохранение..."})):N.forEach((function(e){e.textContent="Сохранить"}))}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,